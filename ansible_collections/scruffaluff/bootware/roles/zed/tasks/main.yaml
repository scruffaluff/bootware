---
# TODO: Integrate once installation becomes stable.
# - name: Install Zed for Alpine
#   become: true
#   community.general.apk:
#     name: zed
#   tags:
#     - install
#   when: ansible_pkg_mgr == "apk"

- name: Check if Zed is installed for Linux
  ansible.builtin.stat:
    path: /usr/local/share/applications/zed.desktop
  register: zed_check
  tags:
    - install
  when: ansible_system == "Linux" and ansible_pkg_mgr != "apk"

- name: Get latest Zed version for Linux
  ansible.builtin.uri:
    method: GET
    return_content: true
    url: https://formulae.brew.sh/api/cask/zed.json
  register: zed_cask
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Create Zed temporary directory for Linux
  ansible.builtin.tempfile:
    state: directory
  register: zed_temp
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Set Zed temporary directory permissions for Linux
  ansible.builtin.file:
    mode: "755"
    path: "{{ zed_temp.path }}"
    state: directory
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Download Zed for Linux
  ansible.builtin.unarchive:
    dest: "{{ zed_temp.path }}"
    mode: "777"
    remote_src: true
    src: >-
      https://github.com/zed-industries/zed/releases/download/v{{
      zed_cask.json.version }}/zed-linux-{{ zed_arch }}.tar.gz
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Install Zed for Linux
  ansible.builtin.copy:
    dest: /usr/local/zed
    directory_mode: "755"
    force: true
    mode: "755"
    remote_src: true
    # Trailing slash prevents copying root folder.
    src: >-
      {{ zed_temp.path }}/zed.app/
  become: true
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Add Zed symlink for Linux
  ansible.builtin.file:
    src: /usr/local/zed/bin/zed
    dest: /usr/local/bin/zed
    force: true
    mode: "755"
    state: link
  become: true
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Install Zed desktop manifest for Linux
  ansible.builtin.copy:
    dest: /usr/local/share/applications/zed.desktop
    force: true
    mode: "644"
    src: zed.desktop
  become: true
  tags:
    - install
  when: >-
    ansible_system == "Linux" and ansible_pkg_mgr != "apk" and not
    zed_check.stat.exists

- name: Install Zed for MacOS
  become: true
  become_user: "{{ brew_user }}"
  community.general.homebrew:
    name: zed
  tags:
    - install
  when: ansible_system == "Darwin"

- name: Install Zed for Windows
  community.windows.win_scoop:
    global: true
    name: zed
  tags:
    - install
  when: ansible_system == "Win32NT"

- name: Create Zed user directory for Unix
  ansible.builtin.file:
    group: "{{ group_id }}"
    mode: "755"
    owner: "{{ user_id }}"
    path: "{{ user_home }}/.config/zed"
    state: directory
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Copy Zed settings file for Unix
  ansible.builtin.template:
    dest: "{{ user_home }}/.config/zed/settings.json"
    force: true
    group: "{{ group_id }}"
    mode: "644"
    owner: "{{ user_id }}"
    src: settings.json.j2
  become: true
  tags:
    - config
  when: ansible_system != "Win32NT"

- name: Create Zed user directory for Unix
  ansible.windows.win_file:
    path: "{{ user_home }}\\.config\\zed"
    state: directory
  tags:
    - config
  when: ansible_system == "Win32NT"

- name: Copy Zed settings file for Windows
  ansible.windows.win_template:
    dest: "{{ user_home }}\\.config\\zed\\settings.json"
    force: true
    src: settings.json.j2
  tags:
    - config
  when: ansible_system == "Win32NT"
